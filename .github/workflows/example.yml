name: setup-cloudquery example

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  cloudquery-sync:
    permissions:
      id-token: write
      contents: read
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        dbversion: ['postgres:latest']
        cloudquery-version: ['6.8.0', 'v6.8.0']
        os: [ubuntu-latest]
      fail-fast: false
    services:
      postgres:
        image: ${{ matrix.dbversion }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
        with:
          role-to-assume: arn:aws:iam::615713231484:role/cq-playground-aws-github-action
          aws-region: us-east-1
      - name: Setup CloudQuery
        uses: ./.
        with:
          version: ${{matrix.cloudquery-version}}
      - name: Sync with CloudQuery
        env:
          CLOUDQUERY_API_KEY: ${{ secrets.CLOUDQUERY_API_KEY }}
        run: cloudquery sync example_configs/spec.yml --log-console
